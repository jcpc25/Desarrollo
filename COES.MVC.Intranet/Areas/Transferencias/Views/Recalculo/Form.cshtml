@model COES.MVC.Intranet.Areas.Transferencias.Models.RecalculoModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    var PeriodoNombre = TempData["Periodonombre"].ToString();
}
<link href="~/Areas/Transferencias/Content/Css/Validate.css" rel="stylesheet" />
<script src="~/Areas/Transferencias/Content/Scripts/recalculo.js"></script>

@using (Html.BeginForm("Save", "recalculo", FormMethod.Post, new { id = "frmRecalculo", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>@sTitulo</legend>
        <div style="padding-left: 20px; width: 500px;">
            @Html.HiddenFor(model => model.Entidad.Recacodi)
            @Html.HiddenFor(model => model.Entidad.Recapericodi)
            <table cellspacing="2" cellpadding="5">
                @if (Model.sError != "")
                {
                    <tr>
                        <td colspan="2">
                            <div class="editor-label" style="color:red;">
                                @Model.sError
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.Recacodi, "Periodo")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.sError, new { @Value = PeriodoNombre, @readonly = "readonly" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Recafecini, "Fecha de Inicio")
                            (*)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                          @Html.TextBoxFor(model => model.Recafecini, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                          @Html.ValidationMessageFor(model => model.Recafecini)
                        </div>
                    </td>
                </tr>

                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Recafecfin, "Fecha Final")
                            (*)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Recafecfin, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Recafecfin)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.Recadesc, "Descripcion")
                            (*)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Entidad.Recadesc, new { cols = 80, @rows = 2, @readonly = true, style = "background-color: #f2f4f3; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 650px; height: 40px;" })
                            @Html.ValidationMessageFor(model => model.Entidad.Recadesc)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr>
                    <td align="right">
                        <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index", "recalculo")    '" alt="Retornar" title="Retornar" />&nbsp;
                    </td>
                    <td align="left">
                        &nbsp;
                        @if (Model.bGrabar)
                        {
                            <input type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                        }
                    </td>
                </tr>

                <tr><td>Nota(*): Campos Requeridos</td></tr>

            </table>
        </div>
    </fieldset>
}
<script src="~/Areas/Transferencias/Content/Scripts/jquery.validate.js"></script>
<script>
    function FormatFecha(sFecha) {   //DD/MM/AAAA
        var sDia = sFecha.substring(0, 2);
        var sMes = sFecha.substring(3, 5);
        var sAnio = sFecha.substring(6, 10);
        return new Date(sAnio, sMes, sDia);
    }

    jQuery.validator.addMethod("MasGrandeQue", function (value, element, params) {
        if (!/Invalid|NaN/.test(new Date(value))) {
            return FormatFecha(value) >= FormatFecha($(params).val());
        }
        return !isNaN(value);
    }, '<br>Debe ser mayor que la fecha de Inicio de Operación.');
    
    $("#frmRecalculo").validate({
        rules: {
            Recafecini: {
                required: true
            },
            Recafecfin: {
                required: true,
                MasGrandeQue: "#Recafecini"
            },
            "Entidad.Recadesc": {
                required: true,
                maxlength: 1000
            }
        }
    });

</script>
